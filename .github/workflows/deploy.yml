name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. 코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Node.js 환경 설정
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    # 3. 종속성 설치
    - name: Install dependencies
      run: npm ci

    # 4. 애플리케이션 빌드
    - name: Build application
      run: npm run build

    # 5. 배포를 위한 app.zip 생성
    - name: Zip application
      run: zip -r app.zip dist/

    # 6. S3에 업로드
    - name: Upload to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      run: |
        aws s3 cp app.zip s3://elasticbeanstalk-${{ secrets.AWS_REGION }}-${{secrets.AWS_ACCOUNT_ID}}/app.zip

    # 7. Elastic Beanstalk에 배포
    - name: Deploy to Elastic Beanstalk
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        EB_APP_NAME: ${{ secrets.EB_APP_NAME }}
        EB_ENV_NAME: ${{ secrets.EB_ENV_NAME }}
      run: |
        aws elasticbeanstalk create-application-version \
          --application-name "$EB_APP_NAME" \
          --version-label "build-${{ github.run_number }}" \
          --source-bundle S3Bucket="elasticbeanstalk-${{ secrets.AWS_REGION }}-${{secrets.AWS_ACCOUNT_ID}}",S3Key="app.zip"

        aws elasticbeanstalk update-environment \
          --application-name "$EB_APP_NAME" \
          --environment-name "$EB_ENV_NAME" \
          --version-label "build-${{ github.run_number }}"

    # 8. 디버그용 로그 확인 (옵션)
    - name: Debug logs
      if: failure()
      run: |
        echo "Fetching Elastic Beanstalk logs..."
        aws elasticbeanstalk request-environment-info \
          --environment-name "$EB_ENV_NAME" \
          --info-type tail

        aws elasticbeanstalk retrieve-environment-info \
          --environment-name "$EB_ENV_NAME" \
          --info-type tail
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
