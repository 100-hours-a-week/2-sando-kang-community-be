name: Deploy sando-community-be using AWS EB

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  deploy:
    if: >
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main' &&
      startsWith(github.event.pull_request.head.ref, 'feature') &&
      github.repository == '2-sando-kang-community-be'
    runs-on: ubuntu-latest

    steps:
    # 1. 코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. AWS 자격 증명 설정
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # 3. Amazon ECR Public에 로그인
    - name: Login to Amazon ECR Public
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/n1b7r8u0

    # 4. Docker 이미지 빌드 및 푸시
    - name: Build, tag, and push image to Amazon ECR Public
      env:
        ECR_REGISTRY: public.ecr.aws/n1b7r8u0
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build . -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"


    # 5. Elastic Beanstalk 배포를 위한 패키지 생성
    - name: Prepare deployment package
      run: |
        mkdir -p deploy
        cp Dockerrun.aws.json deploy/Dockerrun.aws.json
        sed -i "s|\${ECR_REGISTRY}|public.ecr.aws/n1b7r8u0|g" deploy/Dockerrun.aws.json
        sed -i "s|\${ECR_REPOSITORY}|${{ secrets.ECR_REPOSITORY_NAME }}|g" deploy/Dockerrun.aws.json
        sed -i "s|\${IMAGE_TAG}|${{ github.sha }}|g" deploy/Dockerrun.aws.json
        cd deploy && zip -r deploy.zip .

    # 6. Elastic Beanstalk에 배포
    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v14
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ${{ secrets.EB_APP_NAME }}
        environment_name: ${{ secrets.EB_ENV_NAME_DOCKER }}
        version_label: docker-${{ github.sha }}-${{ github.run_number }}-${{ github.event.push.timestamp }}
        region: ap-northeast-2
        deployment_package: deploy/deploy.zip
        wait_for_environment_recovery: 200