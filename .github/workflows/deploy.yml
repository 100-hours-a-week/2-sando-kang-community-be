name: Deploy to Amazon Web Service Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. 코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Node.js 환경 설정
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 22

    # 3. 종속성 설치
    - name: Install dependencies
      run: npm ci

    # 4. 애플리케이션 빌드
    - name: Build application
      run: npm run build

    # 5. 필요한 파일 복사
    - name: Prepare deployment package
      run: |
        cp -R .platform dist
        cp package.json dist/package.json
        cp package-lock.json dist/package-lock.json
        cp Procfile dist/Procfile

    # 6. Docker 로그인 (퍼블릭 ECR)
    - name: Login to Amazon ECR Public
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

    # 7. Docker 이미지 빌드 및 푸시
    - name: Build, tag, and push image to Amazon ECR Public
      env:
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker buildx build --platform=linux/amd64 -t public.ecr.aws/${{ secrets.ECR_REPOSITORY_NAME }}:$IMAGE_TAG .
        docker push public.ecr.aws/${{ secrets.ECR_REPOSITORY_NAME }}:$IMAGE_TAG
        echo "::set-output name=image::public.ecr.aws/${{ secrets.ECR_REPOSITORY_NAME }}:$IMAGE_TAG"

    # 8. Elastic Beanstalk에 배포
    - name: Deploy to Elastic Beanstalk
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ap-northeast-2
        EB_APP_NAME: ${{ secrets.EB_APP_NAME }}
        EB_ENV_NAME: ${{ secrets.EB_ENV_NAME }}
      run: |
        aws elasticbeanstalk create-application-version \
          --application-name "$EB_APP_NAME" \
          --version-label "build-${{ github.run_number }}" \
          --source-bundle S3Bucket="elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="app.zip"

        aws elasticbeanstalk update-environment \
          --application-name "$EB_APP_NAME" \
          --environment-name "$EB_ENV_NAME" \
          --version-label "build-${{ github.run_number }}"






 # 7. S3에 업로드
    # - name: Upload to S3
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_REGION: ${{ secrets.AWS_REGION }}
    #     AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    #   run: |
    #     aws s3 cp app.zip s3://elasticbeanstalk-${{ secrets.AWS_REGION }}-${{secrets.AWS_ACCOUNT_ID}}/app.zip
